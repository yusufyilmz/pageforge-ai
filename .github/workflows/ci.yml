name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # Fast checks - run on every push/PR
  quality:
    name: Code Quality & Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      - name: Run Code Quality Checks
        uses: ./.github/actions/code-quality
        with:
          supabase-url: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          supabase-key: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}

  # Security audit - only on main branch pushes
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      - name: Run Security Audit
        uses: ./.github/actions/security-audit

  # Performance analysis - only on main branch pushes
  performance:
    name: Performance Analysis
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [quality]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      - name: Run Performance Analysis
        uses: ./.github/actions/performance-analysis
        with:
          supabase-url: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL || 'https://placeholder.supabase.co' }}
          supabase-key: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY || 'placeholder-key' }}

  # Supabase tests - only on main branch pushes or when supabase/ files change
  supabase:
    name: Supabase Tests
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      contains(join(github.event.head_commit.modified, ' '), 'supabase/') ||
      contains(join(github.event.head_commit.added, ' '), 'supabase/')

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      - name: Run Supabase Tests
        uses: ./.github/actions/supabase-tests

  # Auto-fix - only on develop branch
  auto-fix:
    name: Auto-fix Code Issues
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      - name: Auto-fix Issues
        uses: ./.github/actions/auto-fix
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  # Deployment Preview - only for PRs
  preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    needs: [quality]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js Environment
        uses: ./.github/actions/setup-node

      - name: Deploy Preview
        uses: ./.github/actions/deploy-preview
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}

  # Notify on completion
  notify:
    name: Notify Results
    runs-on: ubuntu-latest
    needs: [quality, security, performance, supabase]
    if: always()

    steps:
      - name: Send Notifications
        uses: ./.github/actions/notify-results
        with:
          quality-result: ${{ needs.quality.result }}
          security-result: ${{ needs.security.result }}
          performance-result: ${{ needs.performance.result }}
          supabase-result: ${{ needs.supabase.result }}
